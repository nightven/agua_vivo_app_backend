{
  "openapi": "3.0.1",
  "info": {
    "version": "3.0.0",
    "title": "Water Tracker paths",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "contact": {
      "name": "TeamForce",
      "url": "https://discord.gg/qjRf6XKq"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://agua-vivo-app-backend.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    { "name": "User", "description": "User endpoints" },
    {
      "name": "Water",
      "description": "Water endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },

          "401": {
            "description": "Email or password is wrong"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Email in use"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Email or password is wrong"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "User current",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],

        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Forgot password",
        "parameters": [],
        "requestBody": {
          "description": "Enter email address",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/reset-password": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Reset password",
        "parameters": [],
        "requestBody": {
          "description": "Enter old and new passwords",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resent verify email",
        "parameters": [],
        "requestBody": {
          "description": "Resent verify email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerifyEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification email sent"
          },
          "400": {
            "description": "Verification has already been passed"
          },
          "404": {
            "description": "Email not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/info/": {
      "get": {
        "tags": ["User"],
        "summary": "User Information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/update-user": {
      "patch": {
        "tags": ["User"],
        "summary": "User update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Users's fields update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "gender must be one of [Woman, Man]"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Avatar update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["avatar"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "No file"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/water-rate": {
      "patch": {
        "tags": ["User"],
        "summary": "Daily norma update",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update water rate",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRateResponse"
                }
              }
            }
          },

          "400": {
            "description": "dailyNorma must be less than or equal to 15"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/water/add": {
      "post": {
        "tags": ["Water"],
        "summary": "Add water",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add one portion of the water",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWaterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "waterVolume cannot exceed 5000"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/water/update": {
      "put": {
        "tags": ["Water"],
        "summary": "Update water",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update one portion of the water",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWaterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "waterVolume cannot exceed 5000"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/water/delete/{waterId}": {
      "delete": {
        "tags": ["Water"],
        "summary": "Delete water",
        "parameters": [
          {
            "in": "path",
            "name": "waterId",
            "required": "true",
            "type": "string",
            "description": "Water's id"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "Bed request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/water/today": {
      "get": {
        "tags": ["Water"],
        "summary": "Get water",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/water/month/{date}": {
      "get": {
        "tags": ["Water"],
        "summary": "Get water",
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": "true",
            "type": "string",
            "description": "Year and month of water"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Get all water portions for the month",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonthlyWaterRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonthlyWaterResponse"
                }
              }
            }
          },

          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY2YzAzZjg0ZDhmYjZkYzZlYzMzNCIsImlhdCI6MTcWNjQ1NDAyMH0.QJuy3tAZFRuPiAsB-Wp4JJicwjszwR3nCEL2PzdOSds"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address",
                "example": "example@example.com"
              },
              "avatar": {
                "type": "string",
                "description": "URL or path to user's avatar",
                "example": "//www.gravatar.com/avatar/d425269c61aa87ba0e5452de122b2d91"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": ""
              },
              "dailyNorma": {
                "type": "number",
                "description": "User's daily norma",
                "example": 2
              },
              "verificationToken": {
                "type": "string",
                "description": "User's verify token",
                "example": "YPpf4-tWjgmva0nQsBvU2"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY2YzAzZjg0ZDhmYjZkYzZlYzMzNCIsImlhdCI6MTcWNjQ1NDAyMH0.QJuy3tAZFRuPiAsB-Wp4JJicwjszwR3nCEL2PzdOSds"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "UserName"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address",
                "example": "example@example.com"
              },
              "avatar": {
                "type": "string",
                "description": "URL or path to user's avatar",
                "example": "https://res.cloudinary.com/dytpmznz8/image/upload/v1706448821/avatars/65b423e86e2f1f84365454da.jpg"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": ""
              },
              "dailyNorma": {
                "type": "number",
                "description": "User's daily norma",
                "example": 2
              }
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name address",
            "example": "UserName"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "example@example.com"
          },
          "avatar": {
            "type": "string",
            "description": "URL or path to user's avatar",
            "example": "https://res.cloudinary.com/dytpmznz8/image/upload/v1706448821/avatars/65b423e86e2f1f84365454da.jpg"
          },
          "gender": {
            "type": "string",
            "description": "User's gander address",
            "example": ""
          },
          "dailyNorma": {
            "type": "number",
            "description": "User's dailyNorma address",
            "example": 2
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          }
        }
      },
      "ResendPasswordRequest": {
        "type": "object",
        "required": ["password", "id"],
        "properties": {
          "password": {
            "type": "string",
            "description": "User's new password",
            "example": "12345678Aa"
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "12345678A65bfb3396be6664a5ab19be6a"
          }
        }
      },
      "ResendVerifyEmailRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "example@example.com"
          }
        }
      },
      "GetInfoResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "UserName"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "User's email address",
                "example": "example@example.com"
              },
              "avatar": {
                "type": "string",
                "description": "URL or path to user's avatar",
                "example": "https://res.cloudinary.com/dytpmznz8/image/upload/v1706448821/avatars/65b423e86e2f1f84365454da.jpg"
              },
              "gender": {
                "type": "string",
                "description": "User's gender",
                "example": "woman"
              },
              "dailyNorma": {
                "type": "number",
                "description": "User's daily norma",
                "example": 2
              }
            }
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name address",
            "example": "UserName"
          },
          "password": {
            "type": "string",
            "description": "User's old password",
            "example": "12345678Aa"
          },
          "newPassword": {
            "type": "string",
            "description": "User's new password",
            "example": "12345678Bb"
          },
          "gender": {
            "type": "string",
            "description": "User's gander address",
            "example": ""
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "UserName"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "example@example.com"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "woman"
          },
          "dailyNorma": {
            "type": "number",
            "description": "User's dailyNorma address",
            "example": 2
          }
        }
      },
      "UpdateAvatarRequest": {
        "type": "file",
        "required": [],
        "properties": {
          "avatar": {
            "type": "form-data",
            "description": "Avatar file"
          }
        }
      },
      "UpdateAvatarResponse": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "URL or path to user's avatar",
            "example": "https://res.cloudinary.com/dytpmznz8/image/upload/v1706448821/avatars/65b423e86e2f1f84365454da.jpg"
          }
        }
      },
      "WaterRateRequest": {
        "type": "object",
        "required": ["dailyNorma"],
        "properties": {
          "dailyNorma": {
            "type": "number",
            "description": "User's daily norma",
            "example": 1.7
          }
        }
      },
      "WaterRateResponse": {
        "type": "object",
        "properties": {
          "dailyNorma": {
            "type": "number",
            "description": "User's daily norma",
            "example": 1.7
          }
        }
      },
      "AddWaterRequest": {
        "type": "object",
        "required": ["waterVolume", "date"],
        "properties": {
          "waterVolume": {
            "type": "number",
            "description": "Amount of water volume",
            "example": 250
          },
          "time": {
            "type": "string",
            "description": "Date of water intake",
            "example": "11:15 AM"
          }
        }
      },
      "AddWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Water id",
            "example": "65b6896be224fbb3f1f8c92b"
          },
          "waterVolume": {
            "type": "number",
            "description": "Amount of water volume",
            "example": 250
          },
          "time": {
            "type": "string",
            "description": "Date of water intake",
            "example": "11:15 AM"
          }
        }
      },
      "UpdateWaterRequest": {
        "type": "object",
        "required": ["id", "waterVolume", "time"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Water id",

            "example": "65b6896be224fbb3f1f8c92b"
          },
          "waterVolume": {
            "type": "number",
            "description": "Amount of water volume",
            "example": 250
          },
          "time": {
            "type": "string",
            "description": "Date of water intake",
            "example": "11:15 AM"
          }
        }
      },
      "UpdateWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Water id",
            "example": "65b6896be224fbb3f1f8c92b"
          },
          "waterVolume": {
            "type": "number",
            "description": "Amount of water volume",
            "example": 250
          },
          "time": {
            "type": "string",
            "description": "Date of water intake",
            "example": "11:15 AM"
          }
        }
      },
      "DeleteWaterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Water id",
            "example": "65b6896be224fbb3f1f8c92b"
          }
        }
      },
      "DailyWaterResponse": {
        "type": "object",
        "properties": {
          "amountOfWater": { "type": "integer", "example": 1 },
          "percentage": { "type": "integer", "example": 10 },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "65b68e7c7a8fd23d2ed0b0c0"
                },
                "waterVolume": { "type": "integer", "example": 150 },
                "time": {
                  "type": "string",
                  "format": "date-time",
                  "example": "08:35 AM"
                }
              }
            }
          }
        }
      },
      "MonthlyWaterRequest": {
        "type": "object",
        "required": ["date"],
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of water intake",
            "example": "2024-01"
          }
        }
      },
      "MonthlyWaterResponse": {
        "type": "object",
        "properties": {
          "month": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "65b983fb2b34989f9c4ba2e9"
                },
                "date": { "type": "string", "example": "January, 31" },
                "amountOfWater": { "type": "number", "example": 1 },
                "dailyNorma": { "type": "number", "example": 1.7 },
                "percentage": { "type": "integer", "example": 44 }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
